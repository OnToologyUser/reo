prefixes:
  ex: http://example.com/
  reo: https://www.w3id.org/def/reo#
  xsd: http://www.w3.org/2001/XMLSchema#
  schema: http://schema.org/
  
sources:
  realEstateList:
    access: real_estate_data.json
    referenceFormulation: jsonpath
    iterator: "$.realEstate[*]"

mappings:
  realEstate:
    sources: realEstateList
    s: ex:$(publicId)
    po:
      - [a, [schema:Accomodation, reo:RealEstate]]
      - [[schema:name, reo:title], $(title)]
      - [reo:marketingType, reo:$(disposalType)~iri]
      - [reo:realEstateType, reo:$(type)~iri]
      - [reo:apartmentType, reo:$(apartmentType)~iri]
      - [reo:houseType, reo:$(houseType)~iri]
      - [reo:usageType, reo:$(usageType)~iri]
      - [[schema:floorSize, reo:livingSpace], $(allocation.livingSpace), xsd:float]
      - [[schema:numberOfRooms, reo:numberOfRooms], $(allocation.rooms), xsd:float]
      - [[schema:numberOfBedrooms, reo:numberOfBedrooms], $(allocation.bedroomCount), xsd:int]
      - [[schema:numberOfBathroomsTotal, reo:numberOfBathrooms], $(allocation.bathroomCount), xsd:int]
      - [reo:floor, $(allocation.floor), xsd:int]
      - [reo:floorCount, $(allocation.floorCount), xsd:int]
      - [reo:hasGarden, $(allocation.garden), xsd:boolean]
      - [reo:hasFittedKitchen, $(allocation.kitchen), xsd:boolean]
      - [reo:hasBalcony, $(allocation.balcony), xsd:boolean]
      - [reo:hasCellar, $(allocation.cellar), xsd:boolean]
      - [reo:hasWashingMachineConnection, $(allocation.washingmachine), xsd:boolean]
      - [reo:netRent, $(costs.rentNet.amount), xsd:float]
      - [reo:bail, $(costs.bailCosts.amount), xsd:float]
      - [reo:additionalCost, $(costs.additionalCost.amount), xsd:float]
      - [reo:carspaceCost, $(costs.carspaceCosts.amount), xsd:float]
      - [reo:purchasePrice, $(costs.buyCost.amount), xsd:float]
      - [reo:heatingCost, $(costs.heatingCost.amount), xsd:float]
      - [[schema:yearBuilt, reo:constructionYear], $(stats.buildYear), xsd:int]
      - [reo:modernizationYear, $(stats.modernizationYear), xsd:int]
      - [reo:condition, reo:$(conditions.condition)~iri]
      - [reo:equipmentCondition, reo:$(conditions.equipmentCondition)~iri]
      - [reo:cat, reo:$(tenantPreferences.cats)~iri]
      - [reo:dog, reo:$(tenantPreferences.dogs)~iri]
      - [reo:otherPet, reo:$(tenantPreferences.petAllowed)~iri]
      - [reo:commercialUse, reo:$(tenantPreferences.commercialUse)~iri]
      - [reo:livingCommunity, reo:$(tenantPreferences.livingCommunity)~iri]
      - [reo:smoking, reo:$(tenantPreferences.smoking)~iri]
      - [reo:maxHouseholdPersons, $(tenantPreferences.maxHouseholdPersons), xsd:int]
      - [reo:minIncome, $(tenantPreferences.minIncome.amount), xsd:float]
      - [schema:petsAllowed, $(tenantPreferences.petAllowed)]
      - [schema:accommodationCategory, $(apartmentType)]
      - [schema:accommodationCategory, $(houseType)]
      - [schema:floorLevel, $(allocation.floor)]
      - p: reo:address
        o:
          mapping: address
          condition:
            function: equal
            parameters:
              - [str1, $(publicId)]
              - [str2, $(publicId)]
      - p: reo:contact
        o:
          mapping: contactPerson
          condition:
            function: equal
            parameters:
              - [str1, $(publicId)]
              - [str2, $(publicId)]
      - p: reo:energyPass
        o:
          mapping: energyPass
          condition:
            function: equal
            parameters:
              - [str1, $(publicId)]
              - [str2, $(publicId)]
      - p: schema:address
        o:
          mapping: schemaAddress
          condition:
            function: equal
            parameters:
              - [str1, $(publicId)]
              - [str2, $(publicId)]
      - p: schema:additionalType
        o:
          mapping: schemaRealEstateListing
          condition:
            function: equal
            parameters:
              - [str1, $(publicId)]
              - [str2, $(publicId)]
  
  address:
    sources: realEstateList
    s: ex:$(publicId)_address
    po:
      - [a, reo:Address]
      - [reo:street, $(address.street)]
      - [reo:houseNumber, $(address.streetNumber)]
      - [reo:zipCode, $(address.zipcode), xsd:int]
      - [reo:city, $(address.city)]
      - [reo:countryCode, $(address.countryCode)]
    
  contactPerson:
    sources: realEstateList
    s: ex:$(publicId)_contactPerson
    po:
      - [a, [schema:RealEstateAgent,reo:ContactPerson]]
      - [reo:contactType, reo:$(caretakerContact.title)~iri]
      - [reo:notAvailable, $(caretakerContact.notAvailable), xsd:boolean]
      - [[schema:email, reo:email], $(caretakerContact.email)]
      - [[schema:telephone, reo:phoneNumber], $(caretakerContact.phoneNumber)]
      
  energyPass:
    sources: realEstateList
    s: ex:$(publicId)_energyPass
    po:
      - [a, reo:EnergyPass]
      - [reo:energyPassType, reo:$(energyPass.energyPassType)~iri]
      - [reo:energyPassPresentType, reo:$(energyPass.energyPresentType)~iri]
      - [reo:energyCarrier, reo:$(energyPass.energyCarrier)~iri]
      - [reo:heatingType, reo:$(energyPass.heatingType)~iri]
      - [reo:energyEfficiencyClass, reo:$(energyPass.energyEfficiencyCategory)~iri]

  schemaAddress:
    sources: realEstateList
    s: ex:$(publicId)_schemaAddress
    po:
      - [a, schema:PostalAddress]
      - [schema:streetAddress, $(address.street) $(address.streetNumber)]
      - [schema:postalCode, $(address.zipcode)]
      - [schema:addressLocality, $(address.city)]
      - [schema:addressCountry, $(address.countryCode)]
      
  schemaRealEstateListing:
    sources: realEstateList
    s: ex:$(publicId)_schemaRealEstateListing
    po:
      - [a, [schema:RealEstateListing, schema:Offer]]
      - [schema:price, $(costs.rentNet.amount)]
      - [schema:price, $(costs.buyCost.amount)]
      
